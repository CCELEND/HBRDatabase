import math
import datetime
import json
import sys

# 常量推演
class BaseTransform:
    def __init__(self):
        self.box = [
            0b00000111010110111100110100010101,
            0b00010101100110100101010111100101,
            0b00011111000100100011101110110101,
            0b00000000000000000000000000000000,
        ]

    def shift(self):
        tmp = (self.box[0] ^ (self.box[0] << 11)) & 0xFFFFFFFF
        self.box[0] = self.box[1]
        self.box[1] = self.box[2]
        self.box[2] = self.box[3]
        self.box[3] = tmp ^ (tmp >> 8) ^ self.box[3] ^ (self.box[3] >> 19) & 0xFFFFFFFF

    def get_base(self):
        return self.box[3]

    def deepcopy(self):
        new_self = BaseTransform()
        new_self.box[0] = self.box[0]
        new_self.box[1] = self.box[1]
        new_self.box[2] = self.box[2]
        new_self.box[3] = self.box[3]
        return new_self

# seed推演
class NormalFormTransform:
    def __init__(self):
        self.bit = [
            [
                0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,
            ],
            [
                0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,
            ],
            [
                0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,
            ],
            [
                1 << 0,1 << 1,1 << 2,1 << 3,1 << 4,1 << 5,1 << 6,1 << 7,
                1 << 8,1 << 9,1 << 10,1 << 11,1 << 12,1 << 13,1 << 14,1 << 15,
                1 << 16,1 << 17,1 << 18,1 << 19,1 << 20,1 << 21,1 << 22,1 << 23,
                1 << 24,1 << 25,1 << 26,1 << 27,1 << 28,1 << 29,1 << 30,1 << 31,
            ],
        ]

    def shift(self):
        # tmp = (self.box[0] ^ (self.box[0] << 11)) & 0xFFFFFFFF
        tmp = [
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
        ]
        for i in range(0, 11):
            tmp[i] = self.bit[0][i]
        for i in range(11, 32):
            tmp[i] = self.bit[0][i] ^ self.bit[0][i - 11]

        # self.box[0] = self.box[1]
        for i in range(0, 32):
            self.bit[0][i] = self.bit[1][i]

        # self.box[1] = self.box[2]
        for i in range(0, 32):
            self.bit[1][i] = self.bit[2][i]

        # self.box[2] = self.box[3]
        for i in range(0, 32):
            self.bit[2][i] = self.bit[3][i]

        # self.box[3] = tmp ^ (tmp >> 8) ^ self.box[3] ^ (self.box[3] >> 19) & 0xFFFFFFFF
        tmp2 = [
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
        ]
        for i in range(24, 32):
            tmp2[i] = tmp[i]
        for i in range(0, 24):
            tmp2[i] = tmp[i] ^ tmp[i + 8]
        tmp3 = [
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
        ]
        for i in range(0, 13):
            tmp3[i] = tmp2[i] ^ self.bit[3][i] ^ self.bit[3][i + 19]
        for i in range(13, 32):
            tmp3[i] = tmp2[i] ^ self.bit[3][i]

        # return self.box[3]
        for i in range(0, 32):
            self.bit[3][i] = tmp3[i]

    def transform_seed(self, seed):
        result = 0
        for i in range(0, 32):
            mask = seed & self.bit[3][i]
            mask = mask ^ (mask >> 1)
            mask = mask ^ (mask >> 2)
            mask = mask ^ (mask >> 4)
            mask = mask ^ (mask >> 8)
            mask = mask ^ (mask >> 16)
            if (mask & 1) != 0:
                result += 1 << i
        return result

    def get_form(self):
        return self.bit[3]

    def deepcopy(self):
        new_self = NormalFormTransform()
        for i in range(0, 32):
            new_self.bit[0][i] = self.bit[0][i]
            new_self.bit[1][i] = self.bit[1][i]
            new_self.bit[2][i] = self.bit[2][i]
            new_self.bit[3][i] = self.bit[3][i]
        return new_self

# 获得真实随机值
def get_random_value(seed, index):
    base_transform = BaseTransform()
    normal_form_transform = NormalFormTransform()

    for _ in range(index):
        base_transform.shift()
        normal_form_transform.shift()

    random_number = normal_form_transform.transform_seed(seed)
    base_number = base_transform.get_base()
    
    final_random_value = random_number ^ base_number
    return final_random_value

def get_property(random_value, property_dict):
    for key, (start, end) in property_dict.items():
        if start <= random_value <= end:
            return key
    return None

first_entry={
    "第一词条+10%":(1, 1431655800),
    "第一词条+12%":(1431655801, 2863311600),
    "第一词条+15%":(2863311601, 4294967295)
}
DP_entry = {
    "DP +400": (1, 477218600),
    "DP +450": (477218601, 954437200),
    "DP +500": (954437201, 1431655800),
    "DP +550": (1431655801, 1908874400),
    "DP +600": (1908874401, 2386093000),
    "DP +700": (2386093001, 2863311600),
    "DP +800": (2863311601, 3340530200),
    "DP +900": (3340530201, 3817748800),
    "DP +1200": (3817748801, 4294967295)
}
wisdom_entry = {
    "智慧 +32": (1, 477218600),
    "智慧 +33": (477218601, 954437200),
    "智慧 +34": (954437201, 1431655800),
    "智慧 +35": (1431655801, 1908874400),
    "智慧 +37": (1908874401, 2386093000),
    "智慧 +39": (2386093001, 2863311600),
    "智慧 +41": (2863311601, 3340530200),
    "智慧 +43": (3340530201, 3817748800),
    "智慧 +48": (3817748801, 4294967295)
}
attack_power_entry={
    "通常攻击攻击力+100％":(1, 1431655800),
    "通常攻击攻击力+150％":(1431655801, 2863311600),
    "通常攻击攻击力+200％":(2863311601, 4294967295)    
}
physical_strength_entry={
    "体力 +29": (1, 477218600),
    "体力 +30": (477218601, 954437200),
    "体力 +31": (954437201, 1431655800),
    "体力 +32": (1431655801, 1908874400),
    "体力 +34": (1908874401, 2386093000),
    "体力 +36": (2386093001, 2863311600),
    "体力 +38": (2863311601, 3340530200),
    "体力 +40": (3340530201, 3817748800),
    "体力 +45": (3817748801, 4294967295)    
}
spirit_entry={
    "精神 +29": (1, 477218600),
    "精神 +30": (477218601, 954437200),
    "精神 +31": (954437201, 1431655800),
    "精神 +32": (1431655801, 1908874400),
    "精神 +34": (1908874401, 2386093000),
    "精神 +36": (2386093001, 2863311600),
    "精神 +38": (2863311601, 3340530200),
    "精神 +40": (3340530201, 3817748800),
    "精神 +45": (3817748801, 4294967295)      
}

spct = {
    "第一词条+10% DP+400 智慧+32 通常攻击攻击力+100％ 体力+29 精神+29": (1, 477218600),
    "第一词条+10% DP+450 智慧+33 通常攻击攻击力+100％ 体力+30 精神+30": (477218601, 954437200),
    "第一词条+10% DP+500 智慧+34 通常攻击攻击力+100％ 体力+31 精神+31": (954437201, 1431655800),
    "第一词条+12% DP+550 智慧+35 通常攻击攻击力+150％ 体力+32 精神+32": (1431655801, 1908874400),
    "第一词条+12% DP+600 智慧+37 通常攻击攻击力+150％ 体力+34 精神+34": (1908874401, 2386093000),
    "第一词条+12% DP+700 智慧+39 通常攻击攻击力+150％ 体力+36 精神+36": (2386093001, 2863311600),
    "第一词条+15% DP+800 智慧+41 通常攻击攻击力+200％ 体力+38 精神+38": (2863311601, 3340530200),
    "第一词条+15% DP+900 智慧+43 通常攻击攻击力+200％ 体力+40 精神+40": (3340530201, 3817748800),
    "第一词条+15% DP+1200 智慧+48 通常攻击攻击力+200％ 体力+45 精神+45": (3817748801, 4294967295)        
}
career_entry={
    "攻击者": (1, 613566800),
    "破盾者": (613566801, 1227133600),
    "减益者": (1227133601, 1840700400),
    "增益者": (1840700401, 2454267200),
    "破坏者": (2454267201, 3067834000),
    "治疗者": (3067834001, 3681400800),
    "防御者": (3681400801, 4294967295)
}
charm_entry={
    "+0": (1, 1460288880),
    "+1": (1460288881, 2920577760),
    "+2": (2920577761, 3693671873),
    "+3": (3693671874, 4080218930),
    "+4": (4080218931, 4294967295)
}
wash_entry={
    'DP +30': (1, 171798700),
    'DP +20': (171798701, 343597400),
    'HP +20': (343597401, 515396100),
    '力量 +2': (515396101, 687194800),
    '灵巧 +2': (687194801, 858993500),
    '体力 +2': (858993501, 1030792200),
    '精神 +2': (1030792201, 1202590900),
    '智慧 +2': (1202590901, 1374389600),
    '幸运 +2': (1374389601, 1546188300),
    'DP +10': (1546188301, 1717987000),
    'HP +10': (1717987001, 1889785700),
    'HP +30': (1889785701, 2061584400),
    '力量 +1': (2061584401, 2233383100),
    '灵巧 +1': (2233383101, 2405181800),
    '体力 +1': (2405181801, 2576980500),
    '精神 +1': (2576980501, 2748779200),
    '智慧 +1': (2748779201, 2920577900),
    '幸运 +1': (2920577901, 3092376600),
    '力量 +3': (3092376601, 3264175300),
    '灵巧 +3': (3264175301, 3435974000),
    '体力 +3': (3435974001, 3607772700),
    '精神 +3': (3607772701, 3779571400),
    "智慧 +3": (3779571401, 3951370100),
    "幸运 +3": (3951370101, 4123168800),
    "暴击率 +0.2%":(4123168801, 4294967295)
}